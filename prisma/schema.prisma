// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid()) 
  isBusiness   Boolean    @default(false) @map("is_business") // true이면 회사 등록된 유저
  businessName String?    @map("business_name")         // 등록된 회사 이름
  businessCa   String?    @map("business_ca")         // 등록된 회사 Contract Account 
  createdAt    DateTime   @default(now()) @db.Timestamp(0) @map("created_at")
  address      String     @unique  // 지갑 주소
  rwa          Rwa[]  // 소유한 rwa들의 id
  purchases    Purchase[] 

  @@map("User")
}

model Rwa {
  id         String     @id @default(uuid()) 
  maindId    Int        @map("main_id")
  subId      Int        @map("sub_id")
  tokenUri   String     @map("token_uri") 
  name       String     
  createdAt  DateTime   @default(now()) @db.Timestamp(0) @map("created_at")
  amount     Int
  company    String     
  network    String     
  user       User       @relation(fields: [userId], references: [id])
  userId     String     @map("user_id")
  ipfs       Ipfs?      @relation(fields: [ipfsId], references: [id])
  ipfsId     String?    @map("ipfs_id")
  soldAmount Int        @map("sold_amount")
  rewards    Reward[] 
  purchases  Purchase[] 

  @@map("Rwa")
}

model Ipfs {
  id           String    @id @default(uuid()) 
  createdAt    DateTime  @default(now()) @db.Timestamp(0) @map("created_at")
  amount       Int
  type         String    
  country      String    
  company      String    
  name         String    
  price        Int
  description  String    
  uri          String    
  builder      String    
  weight       Int
  expectedDate DateTime  @db.Timestamp(0) @map("expected_date")
  imoNumber    Int       @map("imo_number")
  expiration   DateTime  @db.Timestamp(0)
  dueDate      DateTime  @db.Timestamp(0) @map("due_date")
  rwa          Rwa[] //sql 쿼리와 다른점

  @@map("Ipfs")
}

model Reward {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @db.Timestamp(0) @map("created_at")
  businessName String   @map("business_name")
  address      String   
  reward       String   
  rwa          Rwa      @relation(fields: [rwaId], references: [id]) //sql 쿼리와 다른점 foreign key?
  rwaId        String   @map("rwa_id")

  @@map("Reward")
}

model Purchase {
  id          Int      @id @default(autoincrement())
  tokenAmount Int      @map("token_amount")
  rwa         Rwa      @relation(fields: [rwaId], references: [id])
  rwaId       String   @map("rwa_id")
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @map("user_id")

  @@map("Purchase")
}
